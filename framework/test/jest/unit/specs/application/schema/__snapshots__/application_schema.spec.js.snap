// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema/application_config_schema.js application config schema must match to the snapshot. 1`] = `
Object {
  "additionalProperties": false,
  "default": Object {
    "components": Object {
      "cache": Object {},
      "logger": Object {},
      "storage": Object {},
    },
    "forging": Object {
      "delegates": Array [],
      "force": false,
      "waitThreshold": 2,
    },
    "genesisConfig": Object {
      "blockTime": 10,
      "epochTime": "2016-05-24T17:00:00.000Z",
      "maxPayloadLength": 15360,
      "rewards": Object {
        "distance": 3000000,
        "milestones": Array [
          "500000000",
          "400000000",
          "300000000",
          "200000000",
          "100000000",
        ],
        "offset": 2160,
      },
    },
    "ipc": Object {
      "enabled": false,
    },
    "label": "alpha-sdk-app",
    "modules": Object {
      "http_api": Object {},
    },
    "network": Object {
      "seedPeers": Array [],
      "wsPort": 5000,
    },
    "protocolVersion": "1.1",
    "rebuildUpToRound": null,
    "tempPath": "/tmp/lisk",
    "version": "0.0.0",
  },
  "id": "#/config",
  "properties": Object {
    "buildVersion": Object {
      "description": "The build number. Consists of \`v\` + the date and time of the build of the node.",
      "example": "2020-01-16T13:43:35.000Z",
      "type": "string",
    },
    "components": Object {
      "properties": Object {
        "cache": Object {
          "type": "object",
        },
        "logger": Object {
          "type": "object",
        },
        "storage": Object {
          "type": "object",
        },
      },
      "required": Array [
        "logger",
        "cache",
        "storage",
      ],
      "type": "object",
    },
    "forging": Object {
      "properties": Object {
        "defaultPassword": Object {
          "type": "string",
        },
        "delegates": Object {
          "env": Object {
            "formatter": "stringToDelegateList",
            "variable": "LISK_FORGING_DELEGATES",
          },
          "items": Object {
            "properties": Object {
              "encryptedPassphrase": Object {
                "format": "encryptedPassphrase",
                "type": "string",
              },
              "hashOnion": Object {
                "properties": Object {
                  "count": Object {
                    "type": "integer",
                  },
                  "distance": Object {
                    "type": "integer",
                  },
                  "hashes": Object {
                    "items": Object {
                      "format": "hex",
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": Array [
                  "count",
                  "distance",
                  "hashes",
                ],
                "type": "object",
              },
              "publicKey": Object {
                "format": "publicKey",
                "type": "string",
              },
            },
            "required": Array [
              "encryptedPassphrase",
              "publicKey",
              "hashOnion",
            ],
          },
          "type": "array",
        },
        "force": Object {
          "type": "boolean",
        },
        "waitThreshold": Object {
          "description": "Number of seconds to wait for previous block before forging",
          "type": "integer",
        },
      },
      "required": Array [
        "force",
        "waitThreshold",
        "delegates",
      ],
      "type": "object",
    },
    "genesisConfig": Object {
      "additionalProperties": false,
      "id": "#/config/genesisConfig",
      "properties": Object {
        "blockTime": Object {
          "description": "Slot time interval in seconds",
          "minimum": 2,
          "type": "number",
        },
        "epochTime": Object {
          "description": "Timestamp indicating the start of Lisk Core (\`Date.toISOString()\`)",
          "format": "date-time",
          "type": "string",
        },
        "maxPayloadLength": Object {
          "description": "Maximum number of transactions allowed per block",
          "maximum": 30720,
          "minimum": 10240,
          "type": "integer",
        },
        "rewards": Object {
          "additionalProperties": false,
          "description": "Object representing LSK rewards milestone",
          "id": "#/config/rewards",
          "properties": Object {
            "distance": Object {
              "description": "Distance between each milestone",
              "minimum": 1,
              "type": "integer",
            },
            "milestones": Object {
              "description": "Initial 5, and decreasing until 1",
              "items": Object {
                "format": "amount",
                "type": "string",
              },
              "type": "array",
            },
            "offset": Object {
              "description": "Start rewards at block (n)",
              "minimum": 1,
              "type": "integer",
            },
          },
          "required": Array [
            "milestones",
            "offset",
            "distance",
          ],
          "type": "object",
        },
      },
      "required": Array [
        "epochTime",
        "blockTime",
        "maxPayloadLength",
        "rewards",
      ],
      "type": "object",
    },
    "ipc": Object {
      "properties": Object {
        "enabled": Object {
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "label": Object {
      "description": "Restricted length due to unix domain socket path length limitations.",
      "maxLength": 30,
      "minLength": 1,
      "pattern": "^[a-zA-Z][0-9a-zA-Z\\\\_\\\\-]*$",
      "type": "string",
    },
    "lastCommitId": Object {
      "description": "The version of Lisk Core that the peer node runs on.",
      "example": "968d7b5b97a5bfad8f77614dc8a9918de49f6c6e",
      "format": "hex",
      "maxLength": 40,
      "minLength": 40,
      "type": "string",
    },
    "modules": Object {
      "properties": Object {
        "http_api": Object {
          "type": "object",
        },
      },
      "required": Array [
        "http_api",
      ],
      "type": "object",
    },
    "network": Object {
      "properties": Object {
        "ackTimeout": Object {
          "type": "integer",
        },
        "advertiseAddress": Object {
          "type": "boolean",
        },
        "blacklistedIPs": Object {
          "items": Object {
            "format": "ip",
            "type": "string",
          },
          "type": "array",
        },
        "connectTimeout": Object {
          "type": "integer",
        },
        "fixedPeers": Object {
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ip",
                "type": "string",
              },
              "wsPort": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "maximum": 4,
          "type": "array",
        },
        "hostIp": Object {
          "arg": "--address,-a",
          "env": "LISK_ADDRESS",
          "format": "ip",
          "type": "string",
        },
        "maxInboundConnections": Object {
          "type": "integer",
        },
        "maxOutboundConnections": Object {
          "type": "integer",
        },
        "maxPeerDiscoveryResponseLength": Object {
          "maximum": 1000,
          "type": "integer",
        },
        "maxPeerInfoSize": Object {
          "maximum": 20480,
          "type": "integer",
        },
        "peerBanTime": Object {
          "type": "integer",
        },
        "seedPeers": Object {
          "arg": Object {
            "formatter": "stringToIpPortSet",
            "name": "--peers,-x",
          },
          "env": Object {
            "formatter": "stringToIpPortSet",
            "variable": "LISK_PEERS",
          },
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ipOrFQDN",
                "type": "string",
              },
              "wsPort": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "sendPeerLimit": Object {
          "maximum": 100,
          "minimum": 1,
          "type": "integer",
        },
        "whitelistedPeers": Object {
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ip",
                "type": "string",
              },
              "wsPort": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "wsMaxPayload": Object {
          "maximum": 3048576,
          "type": "integer",
        },
        "wsPort": Object {
          "arg": "--port,-p",
          "env": "LISK_WS_PORT",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer",
        },
      },
      "required": Array [
        "seedPeers",
      ],
      "type": "object",
    },
    "protocolVersion": Object {
      "format": "protocolVersion",
      "type": "string",
    },
    "rebuildUpToRound": Object {
      "arg": "--rebuild,-b",
      "type": Array [
        "integer",
        "null",
      ],
    },
    "tempPath": Object {
      "description": "The root path for storing temporary pid and socket file. Restricted length due to unix domain socket path length limitations.",
      "example": "/tmp/lisk",
      "format": "path",
      "maxLength": 50,
      "minLength": 1,
      "type": "string",
    },
    "version": Object {
      "format": "version",
      "type": "string",
    },
  },
  "required": Array [
    "version",
    "protocolVersion",
    "ipc",
    "genesisConfig",
    "forging",
    "network",
    "components",
    "modules",
  ],
  "type": "object",
}
`;
