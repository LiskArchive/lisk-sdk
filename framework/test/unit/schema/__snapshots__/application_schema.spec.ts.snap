// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema/application_config_schema.js application config schema must match to the snapshot. 1`] = `
Object {
  "applicationConfigSchema": Object {
    "additionalProperties": false,
    "default": Object {
      "forging": Object {
        "delegates": Array [],
        "force": false,
        "waitThreshold": 2,
      },
      "genesisConfig": Object {
        "baseFees": Array [],
        "bftThreshold": 68,
        "blockTime": 10,
        "communityIdentifier": "sdk",
        "maxPayloadLength": 15360,
        "minFeePerByte": 1000,
        "rewards": Object {
          "distance": 3000000,
          "milestones": Array [
            "500000000",
            "400000000",
            "300000000",
            "200000000",
            "100000000",
          ],
          "offset": 2160,
        },
      },
      "ipc": Object {
        "enabled": false,
      },
      "label": "alpha-sdk-app",
      "logger": Object {
        "consoleLogLevel": "none",
        "fileLogLevel": "info",
        "logFileName": "lisk.log",
      },
      "network": Object {
        "port": 5000,
        "seedPeers": Array [],
      },
      "networkVersion": "1.1",
      "plugins": Object {},
      "rootPath": "~/.lisk",
      "transactionPool": Object {
        "maxTransactions": 4096,
        "maxTransactionsPerAccount": 64,
        "minEntranceFeePriority": "0",
        "minReplacementFeeDifference": "10",
        "transactionExpiryTime": 10800000,
      },
      "version": "0.0.0",
    },
    "id": "#/config",
    "properties": Object {
      "forging": Object {
        "properties": Object {
          "defaultPassword": Object {
            "type": "string",
          },
          "delegates": Object {
            "items": Object {
              "properties": Object {
                "address": Object {
                  "format": "hex",
                  "type": "string",
                },
                "encryptedPassphrase": Object {
                  "format": "encryptedPassphrase",
                  "type": "string",
                },
                "hashOnion": Object {
                  "properties": Object {
                    "count": Object {
                      "minimum": 1,
                      "type": "integer",
                    },
                    "distance": Object {
                      "minimum": 1,
                      "type": "integer",
                    },
                    "hashes": Object {
                      "items": Object {
                        "format": "hex",
                        "type": "string",
                      },
                      "minItems": 2,
                      "type": "array",
                    },
                  },
                  "required": Array [
                    "count",
                    "distance",
                    "hashes",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "encryptedPassphrase",
                "address",
                "hashOnion",
              ],
            },
            "type": "array",
          },
          "force": Object {
            "type": "boolean",
          },
          "waitThreshold": Object {
            "description": "Number of seconds to wait for previous block before forging",
            "type": "integer",
          },
        },
        "required": Array [
          "force",
          "waitThreshold",
          "delegates",
        ],
        "type": "object",
      },
      "genesisConfig": Object {
        "additionalProperties": true,
        "id": "#/config/genesisConfig",
        "properties": Object {
          "baseFees": Object {
            "description": "Base fee for a transaction to be valid",
            "items": Object {
              "properties": Object {
                "assetID": Object {
                  "minimum": 0,
                  "type": "integer",
                },
                "baseFee": Object {
                  "format": "uint64",
                  "type": "string",
                },
                "moduleID": Object {
                  "minimum": 2,
                  "type": "number",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "bftThreshold": Object {
            "description": "Number of validators required to set block finality",
            "minimum": 1,
            "type": "integer",
          },
          "blockTime": Object {
            "description": "Slot time interval in seconds",
            "minimum": 2,
            "type": "number",
          },
          "communityIdentifier": Object {
            "description": "The unique name of the relevant community as a string encoded in UTF-8 format",
            "type": "string",
          },
          "maxPayloadLength": Object {
            "description": "Maximum number of transactions allowed per block",
            "maximum": 30720,
            "minimum": 10240,
            "type": "integer",
          },
          "minFeePerByte": Object {
            "description": "Minimum fee per bytes required for a transaction to be valid",
            "minimum": 0,
            "type": "integer",
          },
          "rewards": Object {
            "additionalProperties": false,
            "description": "Object representing LSK rewards milestone",
            "id": "#/config/rewards",
            "properties": Object {
              "distance": Object {
                "description": "Distance between each milestone",
                "minimum": 1,
                "type": "integer",
              },
              "milestones": Object {
                "description": "Initial 5, and decreasing until 1",
                "items": Object {
                  "format": "uint64",
                  "type": "string",
                },
                "type": "array",
              },
              "offset": Object {
                "description": "Start rewards at block (n)",
                "minimum": 1,
                "type": "integer",
              },
            },
            "required": Array [
              "milestones",
              "offset",
              "distance",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "blockTime",
          "communityIdentifier",
          "maxPayloadLength",
          "rewards",
        ],
        "type": "object",
      },
      "ipc": Object {
        "properties": Object {
          "enabled": Object {
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "label": Object {
        "description": "Restricted length due to unix domain socket path length limitations.",
        "maxLength": 30,
        "minLength": 1,
        "pattern": "^[a-zA-Z][0-9a-zA-Z\\\\_\\\\-]*$",
        "type": "string",
      },
      "logger": Object {
        "properties": Object {
          "consoleLogLevel": Object {
            "enum": Array [
              "trace",
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
              "none",
            ],
            "type": "string",
          },
          "fileLogLevel": Object {
            "enum": Array [
              "trace",
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
              "none",
            ],
            "type": "string",
          },
          "logFileName": Object {
            "type": "string",
          },
        },
        "required": Array [
          "fileLogLevel",
          "logFileName",
          "consoleLogLevel",
        ],
        "type": "object",
      },
      "network": Object {
        "properties": Object {
          "ackTimeout": Object {
            "type": "integer",
          },
          "advertiseAddress": Object {
            "type": "boolean",
          },
          "blacklistedIPs": Object {
            "items": Object {
              "format": "ip",
              "type": "string",
            },
            "type": "array",
          },
          "connectTimeout": Object {
            "type": "integer",
          },
          "fixedPeers": Object {
            "items": Object {
              "properties": Object {
                "ip": Object {
                  "format": "ip",
                  "type": "string",
                },
                "port": Object {
                  "maximum": 65535,
                  "minimum": 1,
                  "type": "integer",
                },
              },
              "type": "object",
            },
            "maximum": 4,
            "type": "array",
          },
          "hostIp": Object {
            "format": "ip",
            "type": "string",
          },
          "maxInboundConnections": Object {
            "type": "integer",
          },
          "maxOutboundConnections": Object {
            "type": "integer",
          },
          "maxPeerDiscoveryResponseLength": Object {
            "maximum": 1000,
            "type": "integer",
          },
          "maxPeerInfoSize": Object {
            "maximum": 20480,
            "type": "integer",
          },
          "peerBanTime": Object {
            "type": "integer",
          },
          "port": Object {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
          },
          "seedPeers": Object {
            "items": Object {
              "properties": Object {
                "ip": Object {
                  "format": "ipOrFQDN",
                  "type": "string",
                },
                "port": Object {
                  "maximum": 65535,
                  "minimum": 1,
                  "type": "integer",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "sendPeerLimit": Object {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
          },
          "whitelistedPeers": Object {
            "items": Object {
              "properties": Object {
                "ip": Object {
                  "format": "ip",
                  "type": "string",
                },
                "port": Object {
                  "maximum": 65535,
                  "minimum": 1,
                  "type": "integer",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "wsMaxPayload": Object {
            "maximum": 3048576,
            "type": "integer",
          },
        },
        "required": Array [
          "seedPeers",
        ],
        "type": "object",
      },
      "networkVersion": Object {
        "format": "networkVersion",
        "type": "string",
      },
      "plugins": Object {
        "type": "object",
      },
      "rootPath": Object {
        "description": "The root path for storing temporary pid and socket file and data. Restricted length due to unix domain socket path length limitations.",
        "example": "~/.lisk",
        "format": "path",
        "maxLength": 50,
        "minLength": 1,
        "type": "string",
      },
      "transactionPool": Object {
        "properties": Object {
          "maxTransactions": Object {
            "minimum": 1,
            "type": "integer",
          },
          "maxTransactionsPerAccount": Object {
            "minimum": 1,
            "type": "integer",
          },
          "minEntranceFeePriority": Object {
            "format": "uint64",
            "type": "string",
          },
          "minReplacementFeeDifference": Object {
            "format": "uint64",
            "type": "string",
          },
          "transactionExpiryTime": Object {
            "minimum": 60000,
            "type": "integer",
          },
        },
        "type": "object",
      },
      "version": Object {
        "format": "version",
        "type": "string",
      },
    },
    "required": Array [
      "version",
      "networkVersion",
      "ipc",
      "genesisConfig",
      "forging",
      "network",
      "plugins",
    ],
    "type": "object",
  },
}
`;
