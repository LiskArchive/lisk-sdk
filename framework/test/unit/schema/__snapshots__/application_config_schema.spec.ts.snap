// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema/application_config_schema.js application config schema must match to the snapshot. 1`] = `
Object {
  "$id": "#/config",
  "additionalProperties": false,
  "default": Object {
    "generation": Object {
      "force": false,
      "generators": Array [],
      "modules": Object {},
      "waitThreshold": 2,
    },
    "genesis": Object {
      "baseFees": Array [],
      "blockTime": 10,
      "communityIdentifier": "sdk",
      "maxTransactionsSize": 15360,
      "minFeePerByte": 1000,
      "modules": Object {},
    },
    "label": "beta-sdk-app",
    "logger": Object {
      "consoleLogLevel": "none",
      "fileLogLevel": "info",
      "logFileName": "lisk.log",
    },
    "network": Object {
      "port": 5000,
      "seedPeers": Array [],
    },
    "networkVersion": "1.1",
    "plugins": Object {},
    "rootPath": "~/.lisk",
    "rpc": Object {
      "http": Object {
        "host": "127.0.0.1",
        "port": 8000,
      },
      "modes": Array [
        "ipc",
      ],
      "ws": Object {
        "host": "127.0.0.1",
        "path": "/ws",
        "port": 8080,
      },
    },
    "system": Object {
      "keepEventsForHeights": 300,
    },
    "transactionPool": Object {
      "maxTransactions": 4096,
      "maxTransactionsPerAccount": 64,
      "minEntranceFeePriority": "0",
      "minReplacementFeeDifference": "10",
      "transactionExpiryTime": 10800000,
    },
    "version": "0.0.0",
  },
  "properties": Object {
    "generation": Object {
      "properties": Object {
        "force": Object {
          "type": "boolean",
        },
        "generators": Object {
          "items": Object {
            "properties": Object {
              "address": Object {
                "format": "hex",
                "type": "string",
              },
              "encryptedPassphrase": Object {
                "format": "encryptedPassphrase",
                "type": "string",
              },
              "hashOnion": Object {
                "properties": Object {
                  "count": Object {
                    "minimum": 1,
                    "type": "integer",
                  },
                  "distance": Object {
                    "minimum": 1,
                    "type": "integer",
                  },
                  "hashes": Object {
                    "items": Object {
                      "format": "hex",
                      "type": "string",
                    },
                    "minItems": 2,
                    "type": "array",
                  },
                },
                "required": Array [
                  "count",
                  "distance",
                  "hashes",
                ],
                "type": "object",
              },
            },
            "required": Array [
              "encryptedPassphrase",
              "address",
              "hashOnion",
            ],
          },
          "type": "array",
        },
        "modules": Object {
          "additionalProperties": Object {
            "type": "object",
          },
          "propertyNames": Object {
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
          },
          "type": "object",
        },
        "password": Object {
          "description": "The password to decrypt passphrases",
          "type": "string",
        },
        "waitThreshold": Object {
          "description": "Number of seconds to wait for previous block before forging",
          "type": "integer",
        },
      },
      "required": Array [
        "force",
        "waitThreshold",
        "generators",
        "modules",
      ],
      "type": "object",
    },
    "genesis": Object {
      "additionalProperties": false,
      "properties": Object {
        "baseFees": Object {
          "description": "Base fee for a transaction to be valid",
          "items": Object {
            "properties": Object {
              "assetID": Object {
                "minimum": 0,
                "type": "integer",
              },
              "baseFee": Object {
                "format": "uint64",
                "type": "string",
              },
              "moduleID": Object {
                "minimum": 2,
                "type": "number",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "blockTime": Object {
          "description": "Slot time interval in seconds",
          "minimum": 2,
          "type": "number",
        },
        "communityIdentifier": Object {
          "description": "The unique name of the relevant community as a string encoded in UTF-8 format",
          "type": "string",
        },
        "maxTransactionsSize": Object {
          "description": "Maximum number of transactions allowed per block",
          "maximum": 30720,
          "minimum": 10240,
          "type": "integer",
        },
        "minFeePerByte": Object {
          "description": "Minimum fee per bytes required for a transaction to be valid",
          "minimum": 0,
          "type": "integer",
        },
        "modules": Object {
          "additionalProperties": Object {
            "type": "object",
          },
          "propertyNames": Object {
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
          },
          "type": "object",
        },
      },
      "required": Array [
        "blockTime",
        "communityIdentifier",
        "maxTransactionsSize",
        "minFeePerByte",
        "baseFees",
        "modules",
      ],
      "type": "object",
    },
    "label": Object {
      "description": "Restricted length due to unix domain socket path length limitations.",
      "maxLength": 30,
      "minLength": 1,
      "pattern": "^[a-zA-Z][0-9a-zA-Z_-]*$",
      "type": "string",
    },
    "logger": Object {
      "properties": Object {
        "consoleLogLevel": Object {
          "enum": Array [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal",
            "none",
          ],
          "type": "string",
        },
        "fileLogLevel": Object {
          "enum": Array [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal",
            "none",
          ],
          "type": "string",
        },
        "logFileName": Object {
          "type": "string",
        },
      },
      "required": Array [
        "fileLogLevel",
        "logFileName",
        "consoleLogLevel",
      ],
      "type": "object",
    },
    "network": Object {
      "properties": Object {
        "ackTimeout": Object {
          "type": "integer",
        },
        "advertiseAddress": Object {
          "type": "boolean",
        },
        "blacklistedIPs": Object {
          "items": Object {
            "format": "ip",
            "type": "string",
          },
          "type": "array",
        },
        "connectTimeout": Object {
          "type": "integer",
        },
        "fixedPeers": Object {
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ip",
                "type": "string",
              },
              "port": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "maximum": 4,
          "type": "array",
        },
        "hostIp": Object {
          "format": "ip",
          "type": "string",
        },
        "maxInboundConnections": Object {
          "type": "integer",
        },
        "maxOutboundConnections": Object {
          "type": "integer",
        },
        "maxPeerDiscoveryResponseLength": Object {
          "maximum": 1000,
          "type": "integer",
        },
        "maxPeerInfoSize": Object {
          "maximum": 20480,
          "type": "integer",
        },
        "peerBanTime": Object {
          "type": "integer",
        },
        "port": Object {
          "maximum": 65535,
          "minimum": 1,
          "type": "integer",
        },
        "seedPeers": Object {
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ipOrFQDN",
                "type": "string",
              },
              "port": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "sendPeerLimit": Object {
          "maximum": 100,
          "minimum": 1,
          "type": "integer",
        },
        "whitelistedPeers": Object {
          "items": Object {
            "properties": Object {
              "ip": Object {
                "format": "ip",
                "type": "string",
              },
              "port": Object {
                "maximum": 65535,
                "minimum": 1,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "wsMaxPayload": Object {
          "maximum": 3048576,
          "type": "integer",
        },
      },
      "required": Array [
        "seedPeers",
      ],
      "type": "object",
    },
    "networkVersion": Object {
      "format": "networkVersion",
      "type": "string",
    },
    "plugins": Object {
      "type": "object",
    },
    "rootPath": Object {
      "description": "The root path for storing temporary pid and socket file and data. Restricted length due to unix domain socket path length limitations.",
      "examples": Array [
        "~/.lisk",
      ],
      "format": "path",
      "maxLength": 50,
      "minLength": 1,
      "type": "string",
    },
    "rpc": Object {
      "properties": Object {
        "http": Object {
          "properties": Object {
            "host": Object {
              "type": "string",
            },
            "port": Object {
              "maximum": 65535,
              "minimum": 1024,
              "type": "number",
            },
          },
          "required": Array [
            "host",
            "port",
          ],
          "type": "object",
        },
        "ipc": Object {
          "properties": Object {
            "path": Object {
              "type": "string",
            },
          },
          "required": Array [
            "path",
          ],
          "type": "object",
        },
        "modes": Object {
          "items": Object {
            "enum": Array [
              "ipc",
              "ws",
              "http",
            ],
            "type": "string",
          },
          "type": "array",
          "uniqueItems": true,
        },
        "ws": Object {
          "properties": Object {
            "host": Object {
              "format": "ip",
              "type": "string",
            },
            "path": Object {
              "type": "string",
            },
            "port": Object {
              "maximum": 65535,
              "minimum": 1024,
              "type": "number",
            },
          },
          "required": Array [
            "host",
            "port",
            "path",
          ],
          "type": "object",
        },
      },
      "type": "object",
    },
    "system": Object {
      "properties": Object {
        "keepEventsForHeights": Object {
          "type": "integer",
        },
      },
      "required": Array [
        "keepEventsForHeights",
      ],
      "type": "object",
    },
    "transactionPool": Object {
      "properties": Object {
        "maxTransactions": Object {
          "minimum": 1,
          "type": "integer",
        },
        "maxTransactionsPerAccount": Object {
          "minimum": 1,
          "type": "integer",
        },
        "minEntranceFeePriority": Object {
          "format": "uint64",
          "type": "string",
        },
        "minReplacementFeeDifference": Object {
          "format": "uint64",
          "type": "string",
        },
        "transactionExpiryTime": Object {
          "minimum": 60000,
          "type": "integer",
        },
      },
      "type": "object",
    },
    "version": Object {
      "format": "version",
      "type": "string",
    },
  },
  "required": Array [
    "version",
    "networkVersion",
    "rpc",
    "network",
    "plugins",
    "genesis",
    "generation",
  ],
  "type": "object",
}
`;
