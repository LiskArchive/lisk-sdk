name: 'PR'
on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/prepare-install
      - name: Build
        uses: ./.github/actions/prepare-build
        with:
          cache-key: ${{ github.event.number }}

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git branch --track ${{ github.base_ref }} origin/${{ github.base_ref }}
      - name: Install
        uses: ./.github/actions/prepare-install
      - name: Build
        uses: ./.github/actions/prepare-build
        with:
          cache-key: ${{ github.event.number }}
      - run: yarn format:since --base ${{ github.base_ref }}
      - name: Check format
        run: |
          if [ -z "$(git status --untracked-files=no --porcelain)" ]; then
            echo "All files formatted"
          else
            echo "Running format is required"
            exit 1
          fi
      - run: yarn lint:since --base ${{ github.base_ref }}

  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/prepare-install
      - name: Build
        uses: ./.github/actions/prepare-build
        with:
          cache-key: ${{ github.event.number }}
      - run: yarn test:ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: coverage-final.json
          name: codecov-umbrella
          verbose: true

  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/prepare-install
      - name: Build
        uses: ./.github/actions/prepare-build
        with:
          cache-key: ${{ github.event.number }}
      - run:  yarn nx run-many --target=test:integration --projects=lisk-framework

  functional-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/prepare-install
      - name: Build
        uses: ./.github/actions/prepare-build
        with:
          cache-key: ${{ github.event.number }}
      - run:  yarn nx run-many --target=test:debug --projects=lisk-sdk-test
