@Library('lisk-jenkins') _

pipeline {
	agent { node { label 'lisk-sdk' } }

	stages {
		stage('Build') {
			steps {
				nvm(getNodejsVersion()) {
					sh '''
					npm i -g yarn
					yarn
					yarn build
					'''
				}
			}
		}
		stage('Lint') {
			steps {
				nvm(getNodejsVersion()) {
					sh '''
					yarn lint
					'''
				}
			}
		}
		stage('Format') {
			steps {
				nvm(getNodejsVersion()) {
					sh '''
					npm run format
					if [ -z "$(git status --untracked-files=no --porcelain)" ]; then
						echo "All files formatted"
					else
						echo "Running format is required"
						exit 1
					fi
					'''
				}
			}
		}
		stage('Publish') {
			steps {
				withCredentials([string(credentialsId: 'npm-lisk-io-auth-token-jenkins', variable: 'REGISTRY_AUTH_TOKEN')]) {
					sh '''
					echo "registry=https://npm.lisk.com/\n//npm.lisk.com/:_authToken=$REGISTRY_AUTH_TOKEN" >~/.npmrc
					'''
				}
				nvm(getNodejsVersion()) {
					sh '''
					npx lerna publish --canary --preid canary --registry https://npm.lisk.com --yes
					'''
				}
			}
		}
	}
	post {
		cleanup {
			sh 'rm -f ~/.npmrc'
			cleanWs()
		}
	}
}
// vim: filetype=groovy
