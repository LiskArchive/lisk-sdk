
pm2 stop all
rm -rf ~/.lisk;
./start_example
ts-node ./messageRecovery/events/parse_events.ts

--------------------

// wait till status changes to ACTIVE

// start saving inclusion proofs
ts-node ./messageRecovery/initializeMessageRecovery.ts

// Make sure ```exports.LIVENESS_LIMIT = 2592000;``` in ```lisk-framework/dist-node/modules/interoperability/constants.js```

ts-node pos-mainchain-fast/config/scripts/sidechain_registration.ts
ts-node pos-sidechain-example-one/config/scripts/mainchain_registration.ts

// wait till chain status changes to ACTIVE (check `interoperability_getChainAccount` endpoint)
ts-node ./messageRecovery/initializeMessageRecovery.ts


// change constant in ```exports.LIVENESS_LIMIT = 30;``` in ```lisk-framework/dist-node/modules/interoperability/constants.js```
// wait for 30 sec


------------------
I think you need to first,
- Register sidechain (keep chain connector ON)
- Turn OFF chain connector plugin on mainchain
- Make crossChainTransfer on mainchain to sidechain
- Make the sidechain terminate on mainchain (because of Liveness)
- Submit Liveness termination transaction on mainchain

Now you are ready to recover

By this time you should have below CCMs with idx in sidechain(outbox) on mainchain,
0. registrationCCM
1. crossChainTransferCCM
2. terminationCCM

You can now try to recover 1. crossChainTransferCCM (where the balance should return to the sender)













